name: Release new version
on:
  workflow_dispatch:
    inputs:
      versionChange:
        type: choice
        description: Select the version change
        required: true
        default: 'patch'
        options:
          - major
          - minor
          - patch
      onlyUpload:
        description: chrome|firefox|both|not|none  - Only upload to store(s) without bumping version or releasing
        required: true
        default: not

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Use App Token for the Bot which is allowed to create releases
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: install dependencies
        run: npm ci

      - name: build extension
        if: ${{ github.event.inputs.onlyUpload != 'not' && github.event.inputs.onlyUpload != 'none' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

      - name: Attempt update
        if: ${{ github.event.inputs.onlyUpload == 'not' || github.event.inputs.onlyUpload == 'none' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run release ${{ github.event.inputs.versionChange }}

      - name: Get package version
        if: ${{ github.event.inputs.onlyUpload == 'not' || github.event.inputs.onlyUpload == 'none' }}
        run: echo "package_version=v$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Commit updated files
        if: ${{ github.event.inputs.onlyUpload == 'not' || github.event.inputs.onlyUpload == 'none' }}
        uses: EndBug/add-and-commit@v9
        with:
          add: "."
          message: "[auto] release  ${{env.package_version}}"
          tag: "${{env.package_version}}"

      - name: Release
        if: ${{ github.event.inputs.onlyUpload == 'not' || github.event.inputs.onlyUpload == 'none' }}
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{env.package_version}}"
          files: "*.zip"
          generate_release_notes: true

      - name: Upload to chrome store
        if: ${{ github.event.inputs.onlyUpload != 'firefox' && github.event.inputs.onlyUpload != 'none' }}
        continue-on-error: true
        uses: trmcnvn/chrome-addon@v2
        with:
          extension: bggfcpfjbdkhfhfmkjpbhnkhnpjjeomc
          zip: github-material-icons-chrome-extension.zip
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}

      - name: Upload to edge store
        if: ${{ github.event.inputs.onlyUpload != 'edge' && github.event.inputs.onlyUpload != 'none' }}
        continue-on-error: true
        uses: wdzeng/edge-addon@v1
        with:
          product-id: d7692295-d84f-4bf5-9447-3cbb6ae29517
          zip-path: github-material-icons-edge-extension.zip
          client-id: ${{ secrets.EDGE_CLIENT_ID }}
          client-secret: ${{ secrets.EDGE_CLIENT_SECRET }}
          access-token-url: ${{ secrets.EDGE_ACCESS_TOKEN_URL }}

      - name: Upload to firefox store
        if: ${{ github.event.inputs.onlyUpload != 'chrome' && github.event.inputs.onlyUpload != 'none'}}
        continue-on-error: true
        run: npx web-ext sign -s ./dist/firefox/ --channel=listed --api-key=${{ secrets.FIREFOX_API_JWT_ISSUER }} --api-secret=${{ secrets.FIREFOX_API_JWT_SECRET }}
